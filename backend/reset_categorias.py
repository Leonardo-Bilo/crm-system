#!/usr/bin/env python3
"""
Script para resetar, criar e testar categorias no banco e na API.
"""
import os
import sys
import time
from sqlalchemy import text

# Adiciona o src ao path
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.main import app
from src.models.produto import CategoriaProduto, Produto
from src.models.cliente import db

# Categorias padr√£o
CATEGORIAS_PRODUTOS = [
    {"id": 1, "nome": "Eletr√¥nicos", "descricao": "Produtos eletr√¥nicos e tecnol√≥gicos", "cor": "#3B82F6"},
    {"id": 2, "nome": "Inform√°tica", "descricao": "Computadores, notebooks e acess√≥rios", "cor": "#1E40AF"},
    {"id": 3, "nome": "Smartphones", "descricao": "Celulares e acess√≥rios m√≥veis", "cor": "#7C3AED"},
    {"id": 4, "nome": "Vestu√°rio", "descricao": "Roupas, cal√ßados e acess√≥rios", "cor": "#EC4899"},
    {"id": 5, "nome": "Casa e Jardim", "descricao": "Produtos para casa e jardinagem", "cor": "#10B981"},
    {"id": 6, "nome": "Esportes", "descricao": "Equipamentos e roupas esportivas", "cor": "#F59E0B"},
    {"id": 7, "nome": "Livros", "descricao": "Livros, revistas e material did√°tico", "cor": "#8B5CF6"},
    {"id": 8, "nome": "Brinquedos", "descricao": "Brinquedos e jogos", "cor": "#EF4444"},
    {"id": 9, "nome": "Beleza", "descricao": "Produtos de beleza e cosm√©ticos", "cor": "#F97316"},
    {"id": 10, "nome": "Sa√∫de", "descricao": "Produtos de sa√∫de e bem-estar", "cor": "#06B6D4"},
    {"id": 11, "nome": "Automotivo", "descricao": "Produtos para ve√≠culos", "cor": "#84CC16"},
    {"id": 12, "nome": "Ferramentas", "descricao": "Ferramentas e equipamentos", "cor": "#6B7280"},
    {"id": 13, "nome": "Alimentos", "descricao": "Produtos aliment√≠cios", "cor": "#FBBF24"},
    {"id": 14, "nome": "Bebidas", "descricao": "Bebidas e refrigerantes", "cor": "#34D399"},
    {"id": 15, "nome": "Limpeza", "descricao": "Produtos de limpeza", "cor": "#60A5FA"},
    {"id": 16, "nome": "Papelaria", "descricao": "Material escolar e de escrit√≥rio", "cor": "#A78BFA"},
    {"id": 17, "nome": "M√≥veis", "descricao": "M√≥veis e decora√ß√£o", "cor": "#F87171"},
    {"id": 18, "nome": "J√≥ias", "descricao": "J√≥ias e bijuterias", "cor": "#FCD34D"},
    {"id": 19, "nome": "Rel√≥gios", "descricao": "Rel√≥gios e cron√¥metros", "cor": "#A3E635"},
    {"id": 20, "nome": "C√¢meras", "descricao": "C√¢meras e equipamentos fotogr√°ficos", "cor": "#818CF8"},
    {"id": 21, "nome": "√Åudio", "descricao": "Equipamentos de √°udio e som", "cor": "#FB7185"},
    {"id": 22, "nome": "Games", "descricao": "Jogos eletr√¥nicos e consoles", "cor": "#4F46E5"},
    {"id": 23, "nome": "Pet Shop", "descricao": "Produtos para animais de estima√ß√£o", "cor": "#F472B6"},
    {"id": 24, "nome": "Beb√™s", "descricao": "Produtos para beb√™s e crian√ßas", "cor": "#34D399"},
    {"id": 25, "nome": "Camping", "descricao": "Equipamentos para camping e outdoor", "cor": "#059669"},
    {"id": 26, "nome": "Musical", "descricao": "Instrumentos musicais e acess√≥rios", "cor": "#DC2626"},
    {"id": 27, "nome": "Arte", "descricao": "Material de arte e artesanato", "cor": "#EA580C"},
    {"id": 28, "nome": "Fitness", "descricao": "Equipamentos de academia e fitness", "cor": "#7C2D12"},
    {"id": 29, "nome": "Viagem", "descricao": "Produtos para viagem e turismo", "cor": "#1D4ED8"},
    {"id": 30, "nome": "Escrit√≥rio", "descricao": "Produtos para escrit√≥rio", "cor": "#374151"},
    {"id": 31, "nome": "Industrial", "descricao": "Produtos industriais", "cor": "#1F2937"},
    {"id": 32, "nome": "Constru√ß√£o", "descricao": "Material de constru√ß√£o", "cor": "#92400E"},
    {"id": 33, "nome": "Energia", "descricao": "Produtos relacionados a energia", "cor": "#F59E0B"},
    {"id": 34, "nome": "Seguran√ßa", "descricao": "Produtos de seguran√ßa", "cor": "#DC2626"},
    {"id": 35, "nome": "Telecomunica√ß√µes", "descricao": "Produtos de telecomunica√ß√µes", "cor": "#2563EB"},
    {"id": 36, "nome": "Outros", "descricao": "Outros produtos", "cor": "#6B7280"}
]
CATEGORIAS_SERVICOS = [
    {"id": 37, "nome": "Consultoria", "descricao": "Servi√ßos de consultoria", "cor": "#8B5CF6"},
    {"id": 38, "nome": "Manuten√ß√£o", "descricao": "Servi√ßos de manuten√ß√£o", "cor": "#F59E0B"},
    {"id": 39, "nome": "Tecnologia", "descricao": "Servi√ßos de tecnologia", "cor": "#3B82F6"},
    {"id": 40, "nome": "Design", "descricao": "Servi√ßos de design", "cor": "#EC4899"},
    {"id": 41, "nome": "Marketing", "descricao": "Servi√ßos de marketing", "cor": "#10B981"},
    {"id": 42, "nome": "Educa√ß√£o", "descricao": "Servi√ßos educacionais", "cor": "#F97316"},
    {"id": 43, "nome": "Sa√∫de", "descricao": "Servi√ßos de sa√∫de", "cor": "#EF4444"},
    {"id": 44, "nome": "Beleza", "descricao": "Servi√ßos de beleza", "cor": "#F472B6"},
    {"id": 45, "nome": "Limpeza", "descricao": "Servi√ßos de limpeza", "cor": "#60A5FA"},
    {"id": 46, "nome": "Transporte", "descricao": "Servi√ßos de transporte", "cor": "#34D399"},
    {"id": 47, "nome": "Eventos", "descricao": "Servi√ßos para eventos", "cor": "#A78BFA"},
    {"id": 48, "nome": "Jur√≠dico", "descricao": "Servi√ßos jur√≠dicos", "cor": "#6B7280"},
    {"id": 49, "nome": "Contabilidade", "descricao": "Servi√ßos cont√°beis", "cor": "#F87171"},
    {"id": 50, "nome": "Seguran√ßa", "descricao": "Servi√ßos de seguran√ßa", "cor": "#DC2626"},
    {"id": 51, "nome": "Instala√ß√£o", "descricao": "Servi√ßos de instala√ß√£o", "cor": "#F59E0B"},
    {"id": 52, "nome": "Reparo", "descricao": "Servi√ßos de reparo", "cor": "#7C3AED"},
    {"id": 53, "nome": "Treinamento", "descricao": "Servi√ßos de treinamento", "cor": "#06B6D4"},
    {"id": 54, "nome": "Suporte", "descricao": "Servi√ßos de suporte t√©cnico", "cor": "#84CC16"},
    {"id": 55, "nome": "Desenvolvimento", "descricao": "Desenvolvimento de software", "cor": "#1E40AF"},
    {"id": 56, "nome": "Hosting", "descricao": "Servi√ßos de hospedagem", "cor": "#7C2D12"},
    {"id": 57, "nome": "Dom√≠nio", "descricao": "Servi√ßos de dom√≠nio", "cor": "#059669"},
    {"id": 58, "nome": "Backup", "descricao": "Servi√ßos de backup", "cor": "#1D4ED8"},
    {"id": 59, "nome": "Cloud", "descricao": "Servi√ßos em nuvem", "cor": "#374151"},
    {"id": 60, "nome": "SEO", "descricao": "Servi√ßos de SEO", "cor": "#1F2937"},
    {"id": 61, "nome": "Social Media", "descricao": "Gest√£o de redes sociais", "cor": "#92400E"},
    {"id": 62, "nome": "Fotografia", "descricao": "Servi√ßos fotogr√°ficos", "cor": "#F59E0B"},
    {"id": 63, "nome": "V√≠deo", "descricao": "Servi√ßos de v√≠deo", "cor": "#DC2626"},
    {"id": 64, "nome": "√Åudio", "descricao": "Servi√ßos de √°udio", "cor": "#2563EB"},
    {"id": 65, "nome": "Tradu√ß√£o", "descricao": "Servi√ßos de tradu√ß√£o", "cor": "#6B7280"},
    {"id": 66, "nome": "Outros", "descricao": "Outros servi√ßos", "cor": "#9CA3AF"}
]

def resetar_categorias():
    with app.app_context():
        print("üîÑ Apagando todas as tabelas...")
        db.drop_all()
        print("‚úÖ Todas as tabelas removidas!")
        print("üîÑ Recriando todas as tabelas...")
        db.create_all()
        print("‚úÖ Todas as tabelas criadas!")
        print("üîÑ Inserindo categorias padr√£o...")
        nomes_usados = set()
        categorias = []
        # Produtos
        for cat in CATEGORIAS_PRODUTOS:
            nome = cat['nome']
            if nome in nomes_usados:
                nome = f"{nome} (Produto)"
            nomes_usados.add(nome)
            categorias.append({**cat, 'nome': nome})
        # Servi√ßos
        for cat in CATEGORIAS_SERVICOS:
            nome = cat['nome']
            if nome in nomes_usados:
                nome = f"{nome} (Servi√ßo)"
            nomes_usados.add(nome)
            categorias.append({**cat, 'nome': nome})
        for cat in categorias:
            categoria = CategoriaProduto(
                id=cat['id'],
                nome=cat['nome'],
                descricao=cat['descricao'],
                cor=cat['cor']
            )
            db.session.add(categoria)
        db.session.commit()
        print(f"‚úÖ {len(categorias)} categorias inseridas!")

def testar_api():
    import requests
    print("üîÑ Testando API de categorias...")
    time.sleep(2)
    try:
        r = requests.get('http://localhost:5000/api/categorias-produto', timeout=5)
        if r.status_code == 200:
            cats = r.json().get('categorias', [])
            print(f"‚úÖ API OK! {len(cats)} categorias retornadas.")
            print("Exemplo:", cats[:3])
        else:
            print(f"‚ùå API retornou status {r.status_code}")
    except Exception as e:
        print(f"‚ùå Erro ao testar API: {e}")

if __name__ == "__main__":
    print("=== RESET TOTAL DE CATEGORIAS ===")
    resetar_categorias()
    print("=== AGORA INICIE O BACKEND ===")
    print("python src/main.py (dentro da pasta backend)")
    print("Depois acesse http://localhost:5000/api/categorias-produto para testar.")
    print("Se quiser testar automaticamente, deixe o backend rodando e execute este script novamente!")
    # Teste autom√°tico se backend j√° estiver rodando
    try:
        testar_api()
    except:
        pass 